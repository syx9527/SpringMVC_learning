<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!--
	核心配置文件中的标签必须按照固定的顺序：
	properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,
	reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?
	-->
	
	<!--引入properties文件，在当前文件中使用${key}方式访问value-->
	<properties resource="jdbc.properties"/>
	
	
	<typeAliases>
		
		<!--
		typeAlias：设置某个类型的别名
		属性：
			type：设置需要设置别名的类型
			alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名且不区分大小写
		-->
		
		
		<!--<typeAlias type="com.shaoyx.User"/>-->
		
		<!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写-->
		<package name="com.shaoyx.mybatis.pojo"/>
	</typeAliases>
	
	
	<!-- environments表示配置Mybatis的开发环境，可以配置多个环境，在众多具体环境中，使用default属性指定实际运行时使用的环境。default属性的取值是environment标签的id属性的值。 -->
	<environments default="development">
		<!-- environment表示配置Mybatis的一个具体的环境 -->
		<!--
			transactionManager：设置事务管理方式
			属性：
				type="JDBC|MANAGED"
				JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事务的提交或回滚需要手动处理
				MANAGED：被管理，例如Spring
			-->
		<environment id="development">
			<!-- Mybatis的内置的事务管理器 -->
			<transactionManager type="JDBC"/>
			<!-- 配置数据源 -->
			<!--
				dataSource：配置数据源
				属性：
					type：设置数据源的类型
					type="POOLED|UNPOOLED|JNDI"
					POOLED：表示使用数据库连接池缓存数据库连接
					UNPOOLED：表示不使用数据库连接池
					JNDI：表示使用上下文中的数据源
            -->
			<dataSource type="POOLED">
				<!-- 建立数据库连接的具体信息 -->
				<property name="driver" value="${jdbc.driver}"/>
				<property name="url" value="${jdbc.url}"/>
				<property name="username" value="${jdbc.username}"/>
				<property name="password" value="${jdbc.password}"/>
			</dataSource>
		</environment>
		
		<environment id="test">
			<transactionManager type="JDBC"/>
			<dataSource type="POOLED">
				<!-- 建立数据库连接的具体信息 -->
				<property name="driver" value="${jdbc.driver}"/>
				<property name="url" value="${jdbc.url}"/>
				<property name="username" value="${jdbc.username}"/>
				<property name="password" value="${jdbc.password}"/>
			</dataSource>
		</environment>
		
		<environment id="local">
			<transactionManager type="JDBC"/>
			<dataSource type="POOLED">
				<!-- 建立数据库连接的具体信息 -->
				<property name="driver" value="${jdbc.driver}"/>
				<property name="url" value="${jdbc.url}"/>
				<property name="username" value="${jdbc.username}"/>
				<property name="password" value="${jdbc.password}"/>
			</dataSource>
		</environment>
	
	</environments>
	
	<mappers>
		<!-- Mapper注册：指定Mybatis映射文件的具体位置 -->
		<!-- mapper标签：配置一个具体的Mapper映射文件 -->
		<!-- resource属性：指定Mapper映射文件的实际存储位置，这里需要使用一个以类路径根目录为基准的相对路径 -->
		<!--    对Maven工程的目录结构来说，resources目录下的内容会直接放入类路径，所以这里我们可以以resources目录为基准 -->
		
		
		<!--<mapper resource="mappers/UserMapper.xml"/>-->
		
		<!--
			以包为单位引入映射文件
			   要求：
			   1、mapper接口所在的包要和映射文件所在的包一致
			   2、mapper接口要和映射文件的名字一致
		  -->
		<package name="com.shaoyx.mybatis.mapper"/>
	</mappers>
</configuration>
