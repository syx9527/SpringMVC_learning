<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//com.shaoyx.mybatis.org//DTD Mapper 3.0//EN"
        "https://com.shaoyx.mybatis.org/dtd/com.shaoyx.mybatis-3-mapper.dtd">

<mapper namespace="com.shaoyx.mybatis.SpecialSqlMapper">
    <!--@Table t_user-->
    <!--List<User> getUserByUsernameLike(@Param("username") String username);-->
    <sql id="Base_Column_List">
        id,
        username,
        password,
        age,
        gender,
        email
    </sql>

    <!--
    resultMap：设置自定义映射
    属性：
    id：表示自定义映射的唯一标识
    type：查询的数据要映射的实体类的类型
    子标签：
    id：设置主键的映射关系
    result：设置普通字段的映射关系
    association：设置多对一的映射关系
    collection：设置一对多的映射关系
    属性：
    property：设置映射关系中实体类中的属性名
    column：设置映射关系中表中的字段名
    -->
    <resultMap id="BaseResultMap" type="User">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="age" property="age"/>
        <result column="gender" property="gender"/>
        <result column="email" property="email"/>
    </resultMap>

    <select id="getUserByUsernameLike" resultType="User">
        <!--select * from t_user where username like '%${username}%'-->
        select *
        from t_user
        where username like concat('%', #{username}, '%')
    </select>

    <!--int deleteMore(@Param("ids") String ids);-->
    <delete id="deleteMoreUser">
        delete
        from t_user
        where id in (${ids});
    </delete>


    <!--List<User> getAllUser(@Param("tableName") String tableName);-->
    <select id="getAllUser" resultType="User">
        select *
        from ${tableName} <!--$sqlt_user-->
    </select>

    <!--int insertUser(User user);-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(username, password, age, gender, email)
        values (#{username}, #{password}, #{age}, #{gender}, #{email})
    </insert>
</mapper>
